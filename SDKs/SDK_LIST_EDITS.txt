-------------------------
## List of SDK changes ##
-------------------------
TangentBasisComputation/mikkelsen:
	Added missing StdAfx.h file

GMP & MPFR:
	Had to edit gmp.h a bit to ignore bogus VStudio errors, since boost includes it etc.
	
	Current versions:
		GMP 6.1.2
		MPFR 4.0.1
	
Boost:
	Edited boost/boost/multiprecision/gmp.hpp.
		For unsafe() option call.(tiny edit) Bypasses ASSERT() check and protected status.
		Used for 'is_unused()' checks. Non-conflicting with any existing code and what not.
	
	Eedited boost/boost/multiprecision/mpfr.hpp:
		Added checks for zeroed out buffer in 'allocate_stack' version (replicates allocate_dynamic) 
			Due to memset(0)'s selective usefulness.
			Only for assignment. No asserts added.
	
-------------------------
## Compiling QT ##
------------------------
	See BUILDING_QT.txt

-------------------------
## Compiling GMP and MPFR Libraries ##
-------------------------
PERSONAL IMPROVE:  
	- Perhaps use this https://github.com/BrianGladman/mpfr , although it works now just fine.
	- Convert GMP/MPFR to 'library' + SDK format. For easier RC/etc. inclusion, assuming you can setup build via VStudio.
	
Preparing MSys2:
	Install MSys2 http://www.msys2.org/ and open the msys2 application.

	Run the following lines:
	pacman -Syuu (Close terminal window via X)
	pacman -Syuu 
	pacman -S --needed base-devel mingw-w64-i686-toolchain mingw-w64-x86_64-toolchain git subversion mercurial mingw-w64-i686-cmake mingw-w64-x86_64-cmake
	
	Download YASM (64-bit) http://yasm.tortall.net/Download.html
	Rename to yasm.exe and place into C:\msys64\usr\bin

Compiling GMP:
	PERSONAL TODO: Possible options... --enable-relocatable (Not an option?) Are CFLAGS=-g needed? --with-gnu-ld?
		
	Switch to the mingw64 application, NOT MSYS2 to compile/install GMP.

	Download and unzip GMP tar from https://gmplib.org/
	cd into downloaded GMP folder and run the following lines.

	The --enable-fat build option creates a library where optimized low level subroutines are chosen at runtime according to the CPU detected. 
	Otherwise it would only work on a certain CPU set.
	./configure --prefix=/Libraries/GMP --disable-shared --enable-static --enable-fat --enable-cxx --with-gnu-ld

	Add these for full memory debugging: 
	   ./configure --prefix=/Libraries/GMP --disable-shared --enable-static --enable-cxx --with-gnu-ld --enable-assert --enable-alloca=debug --disable-assembly CFLAGS=-g CXXFLAGS=-g

	make clean // Just in case!
	make
	make check | awk '/# PASS:/{total+=$3} ; END{print total}'   // Result should be 190, ignore other warnings/text. (or just run normally and check for errs) 
	make install

	Static library's are now in C:/msys64/Libraries/GMP.

Modify gmp.h:
	To avoid bogus warnings and errors when building in VStudio. (Better than disabling SDL checks/etc.)
	#ifndef __GMP_H__

	// PERSONAL EDITS : To ignore bogus warnings in GMP. Preserves warning state with push and restores with pop.
	#if defined(_MSC_VER)
	#pragma warning(push)
	#pragma warning(disable:4244)
	#pragma warning(disable:4146)
	#endif

		XXXXXXXXXX MORE CODE HERE XXXXXXXXXX

	// PERSONAL EDITS
	#if defined(_MSC_VER)
	#pragma warning(pop)
	#endif

	#define __GMP_H__
	#endif /* __GMP_H__ */

Compiling MPFR:
	Download and unzip MPFR tar from https://www.mpfr.org/mpfr-current/
	cd into downloaded MPFR folder and run the following lines.
	
	// PERSONAL TODO:
	// Get this building statically with pthread? If possible?
	./configure --with-gmp=C:/msys64/Libraries/GMP --prefix=/Libraries/MPFR --disable-shared --enable-static --enable-thread-safe
		
	To DEBUG: https://github.com/BrianGladman/mpfr/tree/master/doc
		--enable-shared-cache ??
		--enable-logging ??
		--with-gnu-ld ??? And what about the other CPP flags/etc.? Should it match GMP?
		-DMPFR_ALLOCA_MAX=0 ?? (No temporary allocations to stack?)	
	// Crashes/catches some errors! 
	// e.g. when trying to set MPFloat's with another mpfloat that has been memset(0)!
	// Or when memset(sizeof(float) causing invalid mpfloat....
	./configure --with-gmp-build=../gmp-6.1.2 --prefix=/Libraries/MPFR --disable-shared --enable-static --enable-thread-safe --enable-warnings --enable-assert

		  
	make clean // Just in case!
	make > build.log
	make check | awk '/# PASS:/{total+=$3} ; END{print total}'   // Result should be 177, as with GMP .-. tsprintf fails.
	make install
	
	Static library's are now in C:/msys64/Libraries/MPFR.

CryEngine edits:
	Copy C:/msys64/Libraries/GMP to /CRYENGINE/Code/SDKs/GMP
	Copy C:/msys64/mingw64/lib/gcc/x86_64-w64-mingw32/9.1.0/libgcc.a to /CRYENGINE/Code/SDKs/GMP/lib
	Rename the 3 .a files into .lib files, they will be read/compiled properly! (At least in this case)
	
	Copy C:/msys64/Libraries/MPFR to /CRYENGINE/Code/SDKs/MPFR
	Copy C:/msys64/mingw64/lib/gcc/x86_64-w64-mingw32/9.1.0/XXX to /CRYENGINE/Code/SDKs/MPFR/lib
		libgcc_s.a libgcc_eh.a 
		+ C:/msys64/mingw64/x86_64-w64-mingw32/lib/libwinpthread.a
	Rename the 4 .a files into .lib files

	Copy libgcc_s_seh-1.dll and libwinpthread-1.dll from mingw64/bin to /CRYENGINE/Code/SDKs/MPFR/lib.
	
	If ya want you can view the required library appends/etc. in Tools/CMake/Configure.cmake and Tools/RC/CmakeLists.txt
	
==================================== Resources ====================================
Compiling GMP:
	https://machinecognitis.github.io/Math.Gmp.Native/html/846f5c8a-6cba-433e-9f18-cde2ff5695cd.htm
	This version gets rid of this error: unresolved external symbol __getreent referenced in function __gmp_default_allocate	 (file) libgmp.a(memory.o)
	Possibly just because --enable-fat or yasm. Most of the installed packages seem pointless (git etc)
	
	// Installation resources: Older Cygwin resources.
	// 	http://preshing.com/20141108/how-to-install-the-latest-gcc-on-windows/  
	// 	https://stackoverflow.com/questions/16049726/installing-gmp-on-windows-with-cygwin

	// Setting up warning ignorance
	https://www.viva64.com/en/k/0048/
	
Adding GMP library to VStudio:	
	https://stackoverflow.com/questions/23882112/how-to-add-the-static-libraries-to-the-project-in-visual-studio
	https://stackoverflow.com/questions/25446726/running-pbc-in-windows-visual-studio